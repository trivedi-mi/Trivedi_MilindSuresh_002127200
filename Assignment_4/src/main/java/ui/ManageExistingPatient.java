/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JOptionPane;
import model.Clinic;
import model.Patient;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Milind
 */
public class ManageExistingPatient extends javax.swing.JPanel {
Clinic clinic=Clinic.getInstance();
    /**
     * Creates new form ManageExistingPatient
     */
    public ManageExistingPatient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     private int checkIfNumberALreadyExists(String mobileNumber) {
        ArrayList<Patient> patientDirectory=clinic.getList();
        for (int i = 0; i < patientDirectory.size(); i++) {

            {
                if (patientDirectory.get(i).getMobileNumber() == null ? mobileNumber == null : patientDirectory.get(i).getMobileNumber().equals(mobileNumber)) {
                    
                    jTextFieldGivenNumberLinked.setText(patientDirectory.get(i).getPersonName());
                    return i;
                    
                    
                }
            }

        }
        return -1;
    }
     
     public void saveNewEncounter(Patient patient){
         int newRes=Integer.parseInt(jTextRespiratoryRateNew.getText());
         int newHeart=Integer.parseInt(jTextHeartRateNew.getText());
         int newBlood=Integer.parseInt(jTextBloodPressureNew.getText());
         int newWeight=Integer.parseInt(jTextWeightkgNew.getText());
         patient.newEncounter(newRes,newHeart,newBlood,newWeight);
     }
     
     public void avalibleOptions(Patient patient) {
         
        
                
                    if (patient.isPatientNormal()) {
                             jTextFieldIsPatientNormal.setText("Patient is Normal");
                    } else {
                        jTextFieldIsPatientNormal.setText("Patient is not Normal");
                    }

                   

              
               List<String> viewCurrent= new ArrayList<String>();
               viewCurrent=patient.currentVitalSigns();
               System.out.println("Printing List: "+viewCurrent); 
               System.out.println("Printing size: "+viewCurrent.size()); 
               jTextFieldCurrentVital.setText("Visit-" + viewCurrent.get(0) + " "+ viewCurrent.get(1)+ "(" +viewCurrent.get(2) + ")" + " " + viewCurrent.get(3));
               jTextFieldVitals.setText(viewCurrent.get(4));
              
               
               DefaultTableModel tbl = (DefaultTableModel) jTableEncounterHistory.getModel();
               
               tbl.setRowCount(0);
               
               List<ArrayList<String>> enHist = new ArrayList<ArrayList<String>>();
               enHist=patient.viewPatientEncounterHistory();
               System.out.println("loop Encounter");
               System.out.println(enHist);
               for(List innerlist : enHist)
             {
                 Object[] row = new Object[10];
                 int y=0;
              for(Object i : innerlist)
            {
                System.out.print( i+ "Loop se output aaya");
                row[y]=i;
                if(y==2){
                    tbl.addRow(row);
                    y=0;
                }
                else{
                y=y+1;
                }
                
               
            }
               
            
        }
               boolean flag;
               flag=patient.isThisVitalSignNormal();
               if(flag){
               jTextFieldIsBPNormal.setText("Yes");
               }
               else{
                   jTextFieldIsBPNormal.setText("No");
               }
               
               
                    
            
        }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonEncounterNew = new javax.swing.JButton();
        jButtonCheckMobile = new javax.swing.JButton();
        jLabelAddNewEncounter = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEncounterHistory = new javax.swing.JTable();
        jLabelManage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelMobileNumber = new javax.swing.JLabel();
        jTextFieldMobileNumber = new javax.swing.JTextField();
        jTextFieldGivenNumberLinked = new javax.swing.JTextField();
        jTextFieldIsPatientNormal = new javax.swing.JTextField();
        jLabelMobileNumber1 = new javax.swing.JLabel();
        jLabelMobileNumber2 = new javax.swing.JLabel();
        jLabelMobileNumber3 = new javax.swing.JLabel();
        jTextFieldCurrentVital = new javax.swing.JTextField();
        jLabelRespi = new javax.swing.JLabel();
        jTextRespiratoryRateNew = new javax.swing.JTextField();
        jLabelHeart = new javax.swing.JLabel();
        jLabelBp = new javax.swing.JLabel();
        jLabelWeight = new javax.swing.JLabel();
        jTextHeartRateNew = new javax.swing.JTextField();
        jTextBloodPressureNew = new javax.swing.JTextField();
        jTextWeightkgNew = new javax.swing.JTextField();
        jLabelMobileNumber8 = new javax.swing.JLabel();
        jTextFieldVitals = new javax.swing.JTextField();
        jLabelMobileNumber4 = new javax.swing.JLabel();
        jTextFieldIsBPNormal = new javax.swing.JTextField();

        jButtonEncounterNew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonEncounterNew.setText("SAVE ENCOUNTER");
        jButtonEncounterNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncounterNewActionPerformed(evt);
            }
        });

        jButtonCheckMobile.setText("Check");
        jButtonCheckMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCheckMobileActionPerformed(evt);
            }
        });

        jLabelAddNewEncounter.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelAddNewEncounter.setText("ADD NEW ENCOUNTER");

        jTableEncounterHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Visit", "Date", "Vital"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEncounterHistory);

        jLabelManage.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabelManage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelManage.setText("MANAGE PATIENT");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("ENCOUNTER HISTORY OF PATIENT");

        jLabelMobileNumber.setText("Enter Mobile Number:");

        jTextFieldGivenNumberLinked.setEditable(false);

        jTextFieldIsPatientNormal.setEditable(false);

        jLabelMobileNumber1.setText("Given Number Linked To:");

        jLabelMobileNumber2.setText("Is Patient Normal?");

        jLabelMobileNumber3.setText("Current Vital Signs Of:");

        jTextFieldCurrentVital.setEditable(false);

        jLabelRespi.setText("Respiratory Rate:");

        jLabelHeart.setText("Heart Rate:");

        jLabelBp.setText("Blood Pressure:");

        jLabelWeight.setText("Weight:");

        jLabelMobileNumber8.setText("Vitals:");

        jLabelMobileNumber4.setText("Is Patient Blood Pressure Normal?");

        jTextFieldIsBPNormal.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabelMobileNumber)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelMobileNumber2)
                            .addComponent(jLabelMobileNumber1)
                            .addComponent(jLabelMobileNumber3)
                            .addComponent(jLabelMobileNumber8)
                            .addComponent(jLabelMobileNumber4))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCurrentVital, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldMobileNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(jTextFieldGivenNumberLinked)
                            .addComponent(jTextFieldIsPatientNormal)
                            .addComponent(jTextFieldIsBPNormal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCheckMobile))
                    .addComponent(jTextFieldVitals))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jLabel1)))
                .addContainerGap())
            .addComponent(jLabelManage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEncounterNew)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabelAddNewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(113, 113, 113))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelRespi)
                                        .addComponent(jLabelHeart, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextHeartRateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextRespiratoryRateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabelBp)
                                        .addComponent(jLabelWeight))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTextBloodPressureNew, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextWeightkgNew, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(87, 87, 87)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelManage)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCheckMobile)
                            .addComponent(jLabelMobileNumber)
                            .addComponent(jTextFieldMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldGivenNumberLinked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelMobileNumber1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldIsPatientNormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelMobileNumber2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelMobileNumber4)
                            .addComponent(jTextFieldIsBPNormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelMobileNumber3)
                            .addComponent(jTextFieldCurrentVital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelMobileNumber8)
                            .addComponent(jTextFieldVitals)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelAddNewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRespi)
                            .addComponent(jTextRespiratoryRateNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelHeart)
                            .addComponent(jTextHeartRateNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelBp)
                            .addComponent(jTextBloodPressureNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelWeight)
                            .addComponent(jTextWeightkgNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEncounterNew, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEncounterNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncounterNewActionPerformed
        // TODO add your handling code here:
        ArrayList<Patient> patientDirectory=clinic.getList();
        String mobile=jTextFieldMobileNumber.getText();
        System.out.println(patientDirectory.size());
        if (checkIfNumberALreadyExists(mobile) == -1) {
            JOptionPane.showMessageDialog(null, "This Patient with given mobile does not exist");
        } else {
            
            saveNewEncounter(patientDirectory.get(checkIfNumberALreadyExists(mobile)));}
        
           
            JOptionPane.showMessageDialog(null, "Save successful!");
            avalibleOptions(patientDirectory.get(checkIfNumberALreadyExists(mobile)));

    }//GEN-LAST:event_jButtonEncounterNewActionPerformed

    private void jButtonCheckMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCheckMobileActionPerformed
        // TODO add your handling code here:
        ArrayList<Patient> patientDirectory=clinic.getList();
        String mobile=jTextFieldMobileNumber.getText();
        System.out.println(patientDirectory.size());
        if (checkIfNumberALreadyExists(mobile) == -1) {
            JOptionPane.showMessageDialog(null, "Patient does not exist!");;

        } else {
            
            avalibleOptions(patientDirectory.get(checkIfNumberALreadyExists(mobile)));
            JOptionPane.showMessageDialog(null, "Patient exists!");

           

        }
    }//GEN-LAST:event_jButtonCheckMobileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCheckMobile;
    private javax.swing.JButton jButtonEncounterNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAddNewEncounter;
    private javax.swing.JLabel jLabelBp;
    private javax.swing.JLabel jLabelHeart;
    private javax.swing.JLabel jLabelManage;
    private javax.swing.JLabel jLabelMobileNumber;
    private javax.swing.JLabel jLabelMobileNumber1;
    private javax.swing.JLabel jLabelMobileNumber2;
    private javax.swing.JLabel jLabelMobileNumber3;
    private javax.swing.JLabel jLabelMobileNumber4;
    private javax.swing.JLabel jLabelMobileNumber8;
    private javax.swing.JLabel jLabelRespi;
    private javax.swing.JLabel jLabelWeight;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEncounterHistory;
    private javax.swing.JTextField jTextBloodPressureNew;
    private javax.swing.JTextField jTextFieldCurrentVital;
    private javax.swing.JTextField jTextFieldGivenNumberLinked;
    private javax.swing.JTextField jTextFieldIsBPNormal;
    private javax.swing.JTextField jTextFieldIsPatientNormal;
    private javax.swing.JTextField jTextFieldMobileNumber;
    private javax.swing.JTextField jTextFieldVitals;
    private javax.swing.JTextField jTextHeartRateNew;
    private javax.swing.JTextField jTextRespiratoryRateNew;
    private javax.swing.JTextField jTextWeightkgNew;
    // End of variables declaration//GEN-END:variables
}
