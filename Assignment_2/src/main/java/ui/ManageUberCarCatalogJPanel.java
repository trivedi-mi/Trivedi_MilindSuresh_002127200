/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.UberCar;
import model.UberCarList;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 *
 * @author Milind
 */
public class ManageUberCarCatalogJPanel extends javax.swing.JPanel {
    private JPanel jPanel2;
    private UberCarList carList;
    private UberCar carCmp;
    

    /**
     * Creates new form ManageUberCarCatalogJPanel
     */
    public ManageUberCarCatalogJPanel(JPanel jPanel2,UberCarList carList ) {
        initComponents();
        this.jPanel2=jPanel2;
        this.carList=carList;
        populateTable();
    }
     public void populateTable(){
        DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
            
            row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable();
            
            tbl.addRow(row);                     
        }
    }
     
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUberCar = new javax.swing.JTable();
        jLabelSerialNumber = new javax.swing.JLabel();
        jTextSerialNumber = new javax.swing.JTextField();
        jLabelBrand = new javax.swing.JLabel();
        jTextBrand = new javax.swing.JTextField();
        jLabelManufacYear = new javax.swing.JLabel();
        jTextManufacYear = new javax.swing.JTextField();
        jLabelCarCity = new javax.swing.JLabel();
        jTextCarCity = new javax.swing.JTextField();
        jLabelModelNo = new javax.swing.JLabel();
        jTextFieldhModelNumber = new javax.swing.JTextField();
        jLabelExpiredMaintenance = new javax.swing.JLabel();
        jTextExpiredCertificate = new javax.swing.JTextField();
        jLabelCurrentlyAvailable = new javax.swing.JLabel();
        jTextCurrentlyAvailable = new javax.swing.JTextField();
        jLabelCurrentlyUnavailable = new javax.swing.JLabel();
        jTextCurrentlyUnavailable = new javax.swing.JTextField();
        jLabelFirstAvailable = new javax.swing.JLabel();
        jTextFirstAvailable = new javax.swing.JTextField();
        jLabelUsedByUber = new javax.swing.JLabel();
        jTextUsedByUber = new javax.swing.JTextField();
        jLabelLastUpdate = new javax.swing.JLabel();
        jTextLastTime = new javax.swing.JTextField();
        jLabelBookCarMinSeats = new javax.swing.JLabel();
        jTextBookCarMinSeats = new javax.swing.JTextField();
        jLabelBookCarMaxSeats = new javax.swing.JLabel();
        jTextBookCarMaxSeats = new javax.swing.JTextField();
        jButtonSearchSerialNum = new javax.swing.JButton();
        jButtonSearchBrandName = new javax.swing.JButton();
        jButtonSearchManuYesr = new javax.swing.JButton();
        jButtonSearchFilterCity = new javax.swing.JButton();
        jButtonSearchFirstAvailable = new javax.swing.JButton();
        jButtonSearchModelNumber = new javax.swing.JButton();
        jButtonSearchMaintenanceCerti = new javax.swing.JButton();
        jButtonSearchCurrentAvail = new javax.swing.JButton();
        jButtonSearchCurrentUnavai = new javax.swing.JButton();
        jButtonSearchManuByUber = new javax.swing.JButton();
        jButtonSearchLastUpdate = new javax.swing.JButton();
        jButtonSearchMinAndMax = new javax.swing.JButton();
        jLabelMinAndMAx = new javax.swing.JLabel();
        jButtonViewDetails = new javax.swing.JButton();
        jButtonDeleteDetails = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jTableUberCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand Name", "Year", "Min Seats", "Max Seats", "Available City", "Serial Number", "Model Number", "Certificate Valid", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableUberCar);

        jLabelSerialNumber.setText("Enter Serial Number to find the details of Car:");

        jLabelBrand.setText("Filter list of cars by brand name:");

        jLabelManufacYear.setText("Filter list of cars by manufacturing year:");

        jLabelCarCity.setText("Filter list of cars by city:");

        jTextCarCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCarCityActionPerformed(evt);
            }
        });

        jLabelModelNo.setText("Filter list of cars by model number:");

        jLabelExpiredMaintenance.setText("Filter list of cars by expired maintenance certificate:");

        jTextExpiredCertificate.setEditable(false);

        jLabelCurrentlyAvailable.setText("Number of cars currently available:");

        jTextCurrentlyAvailable.setEditable(false);

        jLabelCurrentlyUnavailable.setText("Number of cars currently unavailable:");

        jTextCurrentlyUnavailable.setEditable(false);

        jLabelFirstAvailable.setText("Find the first available passenger car:");

        jTextFirstAvailable.setEditable(false);

        jLabelUsedByUber.setText("List all the cars manufacturer used by Uber:");

        jTextUsedByUber.setEditable(false);

        jLabelLastUpdate.setText("Last updated time of catalog:");

        jTextLastTime.setEditable(false);
        jTextLastTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextLastTimeActionPerformed(evt);
            }
        });

        jLabelBookCarMinSeats.setText("Enter minimum number of seats:");

        jLabelBookCarMaxSeats.setText("Enter maximum number of seats:");

        jButtonSearchSerialNum.setText("Search");
        jButtonSearchSerialNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchSerialNumActionPerformed(evt);
            }
        });

        jButtonSearchBrandName.setText("Search");
        jButtonSearchBrandName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchBrandNameActionPerformed(evt);
            }
        });

        jButtonSearchManuYesr.setText("Search");
        jButtonSearchManuYesr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchManuYesrActionPerformed(evt);
            }
        });

        jButtonSearchFilterCity.setText("Search");
        jButtonSearchFilterCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchFilterCityActionPerformed(evt);
            }
        });

        jButtonSearchFirstAvailable.setText("Search");
        jButtonSearchFirstAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchFirstAvailableActionPerformed(evt);
            }
        });

        jButtonSearchModelNumber.setText("Search");
        jButtonSearchModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchModelNumberActionPerformed(evt);
            }
        });

        jButtonSearchMaintenanceCerti.setText("Search");
        jButtonSearchMaintenanceCerti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchMaintenanceCertiActionPerformed(evt);
            }
        });

        jButtonSearchCurrentAvail.setText("Search");
        jButtonSearchCurrentAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchCurrentAvailActionPerformed(evt);
            }
        });

        jButtonSearchCurrentUnavai.setText("Search");
        jButtonSearchCurrentUnavai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchCurrentUnavaiActionPerformed(evt);
            }
        });

        jButtonSearchManuByUber.setText("Search");
        jButtonSearchManuByUber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchManuByUberActionPerformed(evt);
            }
        });

        jButtonSearchLastUpdate.setText("Search");
        jButtonSearchLastUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchLastUpdateActionPerformed(evt);
            }
        });

        jButtonSearchMinAndMax.setText("Search");
        jButtonSearchMinAndMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchMinAndMaxActionPerformed(evt);
            }
        });

        jLabelMinAndMAx.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelMinAndMAx.setText("List Cars with Minimum and Maximum Seats");

        jButtonViewDetails.setText("VIEW DETAILS");
        jButtonViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewDetailsActionPerformed(evt);
            }
        });

        jButtonDeleteDetails.setText("DELETE");
        jButtonDeleteDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteDetailsActionPerformed(evt);
            }
        });

        jButtonRefresh.setText("REFRESH");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDeleteDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonViewDetails)
                            .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelSerialNumber)
                            .addComponent(jLabelBrand)
                            .addComponent(jLabelManufacYear)
                            .addComponent(jLabelCarCity)
                            .addComponent(jLabelModelNo)
                            .addComponent(jLabelExpiredMaintenance)
                            .addComponent(jLabelCurrentlyAvailable)
                            .addComponent(jLabelCurrentlyUnavailable)
                            .addComponent(jLabelFirstAvailable)
                            .addComponent(jLabelUsedByUber)
                            .addComponent(jLabelLastUpdate))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextCarCity, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchFilterCity, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFirstAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchFirstAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextUsedByUber, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchManuByUber, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextLastTime, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchLastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextCurrentlyUnavailable, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchCurrentUnavai, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldhModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextExpiredCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchMaintenanceCerti, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextCurrentlyAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchCurrentAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonSearchBrandName, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextManufacYear, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonSearchManuYesr, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(178, 178, 178)
                                        .addComponent(jLabelMinAndMAx))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelBookCarMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabelBookCarMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextBookCarMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextBookCarMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(38, 38, 38)
                                        .addComponent(jButtonSearchMinAndMax, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonViewDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDeleteDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRefresh)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSerialNumber)
                    .addComponent(jTextSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchSerialNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelBrand)
                            .addComponent(jTextBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSearchBrandName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelManufacYear)
                            .addComponent(jTextManufacYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSearchManuYesr)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelMinAndMAx)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelBookCarMinSeats)
                                    .addComponent(jTextBookCarMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelBookCarMaxSeats)
                                    .addComponent(jTextBookCarMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSearchMinAndMax)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCarCity)
                    .addComponent(jTextCarCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchFilterCity))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelModelNo)
                    .addComponent(jTextFieldhModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchModelNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelExpiredMaintenance)
                    .addComponent(jTextExpiredCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchMaintenanceCerti))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCurrentlyAvailable)
                    .addComponent(jTextCurrentlyAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchCurrentAvail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCurrentlyUnavailable)
                    .addComponent(jTextCurrentlyUnavailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchCurrentUnavai))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFirstAvailable)
                    .addComponent(jTextFirstAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchFirstAvailable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUsedByUber)
                    .addComponent(jTextUsedByUber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchManuByUber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLastUpdate)
                    .addComponent(jTextLastTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchLastUpdate))
                .addContainerGap(178, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = jTableUberCar.getSelectedRow(); 
        System.out.println(selectedRow);
    if(selectedRow < 0){
    
        JOptionPane.showMessageDialog(null,"Please select a row to view details", "Warning", JOptionPane.WARNING_MESSAGE);
           return;  
    }
    
    else{
        
        UberCar car = (UberCar)jTableUberCar.getValueAt(selectedRow,0);
        ViewUberCarCatalogJPanel panel = new ViewUberCarCatalogJPanel(jPanel2, car,  carList); 
        jPanel2.add("ViewUberCarCatalogJPanel",panel);
        CardLayout layout = (CardLayout) jPanel2.getLayout();
        layout.next(jPanel2);
        
        }    
    }//GEN-LAST:event_jButtonViewDetailsActionPerformed

    private void jButtonDeleteDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = jTableUberCar.getSelectedRow();
        if(selectedRow >= 0)
        {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null,"Would you like to delete the account details?","Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                UberCar car = (UberCar) jTableUberCar.getValueAt(selectedRow,0);
                carList.deleteCar(car);
                populateTable();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row to delete", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jButtonDeleteDetailsActionPerformed

    private void jButtonSearchSerialNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchSerialNumActionPerformed
        // TODO add your handling code here:
       
       DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
           row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable(); 
            System.out.println("serial in" +car.getSerialNumber());
            System.out.println("text out " +jTextSerialNumber.getText());
            
            if(car.getSerialNumber().equals(jTextSerialNumber.getText())){
                System.out.println("Inside if");
                  tbl.addRow(row); 
            }                              
        }
    }//GEN-LAST:event_jButtonSearchSerialNumActionPerformed

    private void jButtonSearchBrandNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchBrandNameActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
           row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable(); 
            System.out.println("serial in" +car.getBrand());
            System.out.println("text out " +jTextBrand.getText());
            
            if(car.getBrand().equals(jTextBrand.getText())){
                System.out.println("Inside if");
                  tbl.addRow(row); 
            }                              
        }
    }//GEN-LAST:event_jButtonSearchBrandNameActionPerformed

    private void jButtonSearchManuYesrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchManuYesrActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
            row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable(); 
         
            
            if(car.getManufacturedYear()==(Integer.parseInt(jTextManufacYear.getText()))){
                  tbl.addRow(row); 
            }                              
        }
    }//GEN-LAST:event_jButtonSearchManuYesrActionPerformed

    private void jTextCarCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCarCityActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTextCarCityActionPerformed

    private void jButtonSearchFilterCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchFilterCityActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
            row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable(); 
         
            
            if(car.getAvailableCity().equals(jTextCarCity.getText())){
                  tbl.addRow(row); 
            }                              
        }
    }//GEN-LAST:event_jButtonSearchFilterCityActionPerformed

    private void jButtonSearchModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchModelNumberActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
            row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable(); 
         
            
            if(car.getModelNumber().equals(jTextFieldhModelNumber.getText())){
                  tbl.addRow(row); 
            }                              
        }
    }//GEN-LAST:event_jButtonSearchModelNumberActionPerformed

    private void jButtonSearchMaintenanceCertiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchMaintenanceCertiActionPerformed
        // TODO add your handling code here:
         DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        int x=0;
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
            row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable();                 
            if(car.isMaintenanceCertificate()==(false)){
                  tbl.addRow(row); 
                  x=x+1;
            }                              
        } 
        String y = String.valueOf(x);
        jTextExpiredCertificate.setText(y);
    }//GEN-LAST:event_jButtonSearchMaintenanceCertiActionPerformed

    private void jButtonSearchCurrentAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchCurrentAvailActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        int x=0;
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
            row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable();                 
            if(car.isAvailable()==(true)){
                  tbl.addRow(row); 
                  x=x+1;
            }                              
        } 
        String y = String.valueOf(x);
        jTextCurrentlyAvailable.setText(y);
    }//GEN-LAST:event_jButtonSearchCurrentAvailActionPerformed

    private void jButtonSearchCurrentUnavaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchCurrentUnavaiActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);
        int x=0;
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
            row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable();                 
            if(car.isAvailable()==(false)){
                  tbl.addRow(row); 
                  x=x+1;
            }                              
        } 
        String y = String.valueOf(x);
        jTextCurrentlyUnavailable.setText(y);
    }//GEN-LAST:event_jButtonSearchCurrentUnavaiActionPerformed

    private void jButtonSearchFirstAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchFirstAvailableActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl= (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);       
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
             row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable();   
            if(car.isAvailable()==(true)){
            tbl.addRow(row);
            jTextFirstAvailable.setText("Serial Number-"+ car.getSerialNumber());
            break;                             
        } }
                                 
        
        
    }//GEN-LAST:event_jButtonSearchFirstAvailableActionPerformed

    private void jButtonSearchManuByUberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchManuByUberActionPerformed
        // TODO add your handling code here
        Set<String> distinctCars = new HashSet<>();
        for(UberCar car : carList.getCarList()){
            distinctCars.add(car.getBrand());
        }
        jTextUsedByUber.setText(String.join(",", distinctCars));
    }//GEN-LAST:event_jButtonSearchManuByUberActionPerformed

    private void jButtonSearchLastUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchLastUpdateActionPerformed
        // TODO add your handling code here:
        jTextLastTime.setText(String.valueOf(carList.getCurrentDate()));
    }//GEN-LAST:event_jButtonSearchLastUpdateActionPerformed

    private void jButtonSearchMinAndMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchMinAndMaxActionPerformed
        // TODO add your handling code here:
        String minvalue = jTextBookCarMinSeats.getText();
        if(minvalue == null || minvalue.equals("")){
            JOptionPane.showMessageDialog(null, "Minimum number of seats cannot be empty");
            return;
        }
        try{
          Integer.parseInt(minvalue);  
        }catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Please enter minimum seats in number format");
            return;
        }
        String maxvalue = jTextBookCarMaxSeats.getText();
        if(maxvalue == null || maxvalue.equals("")){
            JOptionPane.showMessageDialog(null, "Maximum number of seats cannot be empty");
            return;
        }
        try{
          Integer.parseInt(maxvalue);  
        }catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Please enter maximum seats in number format");
            return;
        }
        DefaultTableModel tbl = (DefaultTableModel) jTableUberCar.getModel();
        tbl.setRowCount(0);       
        for(UberCar car : carList.getCarList()){
            Object[] row = new Object[10];
            
            row[0] = car;
            row[1] = car.getManufacturedYear();
            row[2] = car.getMinSeats();
            row[3] = car.getMaxSeats();
            row[4] = car.getAvailableCity();
            row[5] = car.getSerialNumber();
            row[6] = car.getModelNumber();
            row[7] = car.isMaintenanceCertificate();
            row[8] = car.isAvailable();
            if(car.getMaxSeats() <= Integer.parseInt(jTextBookCarMaxSeats.getText()) && car.getMinSeats() >= Integer.parseInt(jTextBookCarMinSeats.getText())){
            tbl.addRow(row);             
            }
        //}
        }
        
    }//GEN-LAST:event_jButtonSearchMinAndMaxActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jTextLastTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextLastTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextLastTimeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeleteDetails;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonSearchBrandName;
    private javax.swing.JButton jButtonSearchCurrentAvail;
    private javax.swing.JButton jButtonSearchCurrentUnavai;
    private javax.swing.JButton jButtonSearchFilterCity;
    private javax.swing.JButton jButtonSearchFirstAvailable;
    private javax.swing.JButton jButtonSearchLastUpdate;
    private javax.swing.JButton jButtonSearchMaintenanceCerti;
    private javax.swing.JButton jButtonSearchManuByUber;
    private javax.swing.JButton jButtonSearchManuYesr;
    private javax.swing.JButton jButtonSearchMinAndMax;
    private javax.swing.JButton jButtonSearchModelNumber;
    private javax.swing.JButton jButtonSearchSerialNum;
    private javax.swing.JButton jButtonViewDetails;
    private javax.swing.JLabel jLabelBookCarMaxSeats;
    private javax.swing.JLabel jLabelBookCarMinSeats;
    private javax.swing.JLabel jLabelBrand;
    private javax.swing.JLabel jLabelCarCity;
    private javax.swing.JLabel jLabelCurrentlyAvailable;
    private javax.swing.JLabel jLabelCurrentlyUnavailable;
    private javax.swing.JLabel jLabelExpiredMaintenance;
    private javax.swing.JLabel jLabelFirstAvailable;
    private javax.swing.JLabel jLabelLastUpdate;
    private javax.swing.JLabel jLabelManufacYear;
    private javax.swing.JLabel jLabelMinAndMAx;
    private javax.swing.JLabel jLabelModelNo;
    private javax.swing.JLabel jLabelSerialNumber;
    private javax.swing.JLabel jLabelUsedByUber;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUberCar;
    private javax.swing.JTextField jTextBookCarMaxSeats;
    private javax.swing.JTextField jTextBookCarMinSeats;
    private javax.swing.JTextField jTextBrand;
    private javax.swing.JTextField jTextCarCity;
    private javax.swing.JTextField jTextCurrentlyAvailable;
    private javax.swing.JTextField jTextCurrentlyUnavailable;
    private javax.swing.JTextField jTextExpiredCertificate;
    private javax.swing.JTextField jTextFieldhModelNumber;
    private javax.swing.JTextField jTextFirstAvailable;
    private javax.swing.JTextField jTextLastTime;
    private javax.swing.JTextField jTextManufacYear;
    private javax.swing.JTextField jTextSerialNumber;
    private javax.swing.JTextField jTextUsedByUber;
    // End of variables declaration//GEN-END:variables
}

                  
        
